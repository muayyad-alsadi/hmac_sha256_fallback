{"version":3,"file":"hmac_sha256.min.js","sources":["../../src/hmac_sha256.raw.mjs","../../src/hmac_sha256_helper.mjs"],"sourcesContent":["\n  var bufferView;\n  var base64ReverseLookup = new Uint8Array(123/*'z'+1*/);\n  for (var i = 25; i >= 0; --i) {\n    base64ReverseLookup[48+i] = 52+i; // '0-9'\n    base64ReverseLookup[65+i] = i; // 'A-Z'\n    base64ReverseLookup[97+i] = 26+i; // 'a-z'\n  }\n  base64ReverseLookup[43] = 62; // '+'\n  base64ReverseLookup[47] = 63; // '/'\n  /** @noinline Inlining this function would mean expanding the base64 string 4x times in the source code, which Closure seems to be happy to do. */\n  function base64DecodeToExistingUint8Array(uint8Array, offset, b64) {\n    var b1, b2, i = 0, j = offset, bLength = b64.length, end = offset + (bLength*3>>2) - (b64[bLength-2] == '=') - (b64[bLength-1] == '=');\n    for (; i < bLength; i += 4) {\n      b1 = base64ReverseLookup[b64.charCodeAt(i+1)];\n      b2 = base64ReverseLookup[b64.charCodeAt(i+2)];\n      uint8Array[j++] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;\n      if (j < end) uint8Array[j++] = b1 << 4 | b2 >> 2;\n      if (j < end) uint8Array[j++] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i+3)];\n    }\n    return uint8Array;\n  }\nfunction initActiveSegments(imports) {\n  base64DecodeToExistingUint8Array(bufferView, 1024, \"Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FuYL4pCkUQ3cc/7wLWl27XpW8JWOfER8Vmkgj+S1V4cq5iqB9gBW4MSvoUxJMN9DFV0Xb5y/rHegKcG3Jt08ZvBwWmb5IZHvu/GncEPzKEMJG8s6S2qhHRK3KmwXNqI+XZSUT6YbcYxqMgnA7DHf1m/8wvgxkeRp9VRY8oGZykpFIUKtyc4IRsu/G0sTRMNOFNUcwpluwpqdi7JwoGFLHKSoei/oktmGqhwi0vCo1FsxxnoktEkBpnWhTUO9HCgahAWwaQZCGw3Hkx3SCe1vLA0swwcOUqq2E5Pypxb828uaO6Cj3RvY6V4FHjIhAgCx4z6/76Q62xQpPej+b7yeHHG\");\n}\n\n  var scratchBuffer = new ArrayBuffer(16);\n  var i32ScratchView = new Int32Array(scratchBuffer);\n  var f32ScratchView = new Float32Array(scratchBuffer);\n  var f64ScratchView = new Float64Array(scratchBuffer);\n  \n  function wasm2js_memory_copy(dest, source, size) {\n    // TODO: traps on invalid things\n    bufferView.copyWithin(dest, source, source + size);\n  }\n      \n  function wasm2js_memory_fill(dest, value, size) {\n    dest = dest >>> 0;\n    size = size >>> 0;\n    if (dest + size > bufferView.length) throw \"trap: invalid memory.fill\";\n    bufferView.fill(value, dest, dest + size);\n  }\n      \nfunction asmFunc(env) {\n var buffer = new ArrayBuffer(131072);\n var HEAP8 = new Int8Array(buffer);\n var HEAP16 = new Int16Array(buffer);\n var HEAP32 = new Int32Array(buffer);\n var HEAPU8 = new Uint8Array(buffer);\n var HEAPU16 = new Uint16Array(buffer);\n var HEAPU32 = new Uint32Array(buffer);\n var HEAPF32 = new Float32Array(buffer);\n var HEAPF64 = new Float64Array(buffer);\n var Math_imul = Math.imul;\n var Math_fround = Math.fround;\n var Math_abs = Math.abs;\n var Math_clz32 = Math.clz32;\n var Math_min = Math.min;\n var Math_max = Math.max;\n var Math_floor = Math.floor;\n var Math_ceil = Math.ceil;\n var Math_trunc = Math.trunc;\n var Math_sqrt = Math.sqrt;\n var abort = env.abort;\n var nan = NaN;\n var infinity = Infinity;\n var global$0 = 66848;\n var global$1 = 1056;\n var global$2 = 1024;\n var global$3 = 1024;\n var global$4 = 1312;\n var global$5 = 1024;\n var global$6 = 66848;\n var global$7 = 0;\n var global$8 = 1;\n function $0() {\n  \n }\n \n function $1($0_1, $1_1, $2_1) {\n  $0_1 = $0_1 | 0;\n  $1_1 = $1_1 | 0;\n  $2_1 = $2_1 | 0;\n  var $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;\n  $7 = global$0 - 256 | 0;\n  global$0 = $7;\n  if (($2_1 | 0) > 0) {\n   $25 = $7 | 4;\n   while (1) {\n    $4_1 = 0;\n    while (1) {\n     $3_1 = $1_1 + $4_1 | 0;\n     $3_1 = HEAPU8[$3_1 | 0] | HEAPU8[$3_1 + 1 | 0] << 8 | (HEAPU8[$3_1 + 2 | 0] << 16 | HEAPU8[$3_1 + 3 | 0] << 24);\n     HEAP32[$4_1 + $7 >> 2] = $3_1 << 24 | $3_1 << 8 & 16711680 | ($3_1 >>> 8 & 65280 | $3_1 >>> 24);\n     $4_1 = $4_1 + 4 | 0;\n     if (($4_1 | 0) != 64) {\n      continue\n     }\n     break;\n    };\n    $6_1 = 0;\n    $11 = HEAP32[$7 >> 2];\n    $5_1 = $11;\n    while (1) {\n     $4_1 = $5_1;\n     $5_1 = $6_1 + $7 | 0;\n     $3_1 = HEAP32[$5_1 + 56 >> 2];\n     $3_1 = $4_1 + (HEAP32[$5_1 + 36 >> 2] + (__wasm_rotl_i32($3_1, 15) ^ __wasm_rotl_i32($3_1, 13) ^ $3_1 >>> 10) | 0) | 0;\n     $4_1 = $5_1 - -64 | 0;\n     $5_1 = HEAP32[$5_1 + 4 >> 2];\n     (wasm2js_i32$0 = $4_1, wasm2js_i32$1 = (__wasm_rotl_i32($5_1, 25) ^ __wasm_rotl_i32($5_1, 14) ^ $5_1 >>> 3) + $3_1 | 0), HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;\n     $6_1 = $6_1 + 4 | 0;\n     if (($6_1 | 0) != 192) {\n      continue\n     }\n     break;\n    };\n    $8 = 0;\n    $15 = HEAP32[$0_1 + 164 >> 2];\n    $9 = $15;\n    $16 = HEAP32[$0_1 + 152 >> 2];\n    $12 = $16;\n    $17 = HEAP32[$0_1 + 156 >> 2];\n    $4_1 = $17;\n    $18 = HEAP32[$0_1 + 160 >> 2];\n    $3_1 = $18;\n    $19 = HEAP32[$0_1 + 136 >> 2];\n    $13 = $19;\n    $20 = HEAP32[$0_1 + 140 >> 2];\n    $6_1 = $20;\n    $21 = HEAP32[$0_1 + 144 >> 2];\n    $5_1 = $21;\n    $22 = HEAP32[$0_1 + 148 >> 2];\n    $23 = $22;\n    while (1) {\n     $10 = $5_1;\n     $5_1 = $6_1;\n     $26 = HEAP32[$8 + 1056 >> 2];\n     $14 = $4_1;\n     $4_1 = $12;\n     $6_1 = __wasm_rotl_i32($4_1, 26) ^ __wasm_rotl_i32($4_1, 21);\n     $9 = ((((($4_1 & $14) + $9 | 0) + (__wasm_rotl_i32($4_1, 7) ^ $6_1) | 0) + (($4_1 ^ -1) & $3_1) | 0) + $26 | 0) + $11 | 0;\n     $6_1 = $13;\n     $13 = ($9 + (__wasm_rotl_i32($6_1, 30) ^ __wasm_rotl_i32($6_1, 19) ^ __wasm_rotl_i32($6_1, 10)) | 0) + (($5_1 ^ $10) & $6_1 ^ $5_1 & $10) | 0;\n     $12 = $9 + $23 | 0;\n     if (($8 | 0) != 252) {\n      $11 = HEAP32[$8 + $25 >> 2];\n      $8 = $8 + 4 | 0;\n      $9 = $3_1;\n      $3_1 = $14;\n      $23 = $10;\n      continue;\n     }\n     break;\n    };\n    HEAP32[$0_1 + 164 >> 2] = $3_1 + $15;\n    HEAP32[$0_1 + 160 >> 2] = $14 + $18;\n    HEAP32[$0_1 + 156 >> 2] = $4_1 + $17;\n    HEAP32[$0_1 + 152 >> 2] = $12 + $16;\n    HEAP32[$0_1 + 148 >> 2] = $10 + $22;\n    HEAP32[$0_1 + 144 >> 2] = $5_1 + $21;\n    HEAP32[$0_1 + 140 >> 2] = $6_1 + $20;\n    HEAP32[$0_1 + 136 >> 2] = $13 + $19;\n    $1_1 = $1_1 - -64 | 0;\n    $24 = $24 + 1 | 0;\n    if (($24 | 0) != ($2_1 | 0)) {\n     continue\n    }\n    break;\n   };\n  }\n  global$0 = $7 + 256 | 0;\n }\n \n function $2($0_1, $1_1, $2_1) {\n  $0_1 = $0_1 | 0;\n  $1_1 = $1_1 | 0;\n  $2_1 = $2_1 | 0;\n  var $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;\n  $3_1 = global$0 - 176 | 0;\n  global$0 = $3_1;\n  $4_1 = HEAP32[259];\n  $5_1 = $3_1 + 152 | 0;\n  HEAP32[$5_1 >> 2] = HEAP32[258];\n  HEAP32[$5_1 + 4 >> 2] = $4_1;\n  $4_1 = HEAP32[261];\n  $5_1 = $3_1 + 160 | 0;\n  HEAP32[$5_1 >> 2] = HEAP32[260];\n  HEAP32[$5_1 + 4 >> 2] = $4_1;\n  $4_1 = HEAP32[263];\n  $5_1 = $3_1 + 168 | 0;\n  HEAP32[$5_1 >> 2] = HEAP32[262];\n  HEAP32[$5_1 + 4 >> 2] = $4_1;\n  HEAP32[$3_1 + 8 >> 2] = 0;\n  HEAP32[$3_1 + 12 >> 2] = 0;\n  $4_1 = HEAP32[257];\n  HEAP32[$3_1 + 144 >> 2] = HEAP32[256];\n  HEAP32[$3_1 + 148 >> 2] = $4_1;\n  $5_1 = $3_1 + 16 | 0;\n  $4_1 = $1_1 >>> 0 < 64 ? $1_1 : 64;\n  wasm2js_memory_copy($5_1, $0_1, $4_1);\n  label$1 : {\n   if ($1_1 >>> 0 <= 63) {\n    HEAP32[$3_1 + 12 >> 2] = $1_1;\n    break label$1;\n   }\n   $6_1 = $3_1 + 8 | 0;\n   $1($6_1, $5_1, 1);\n   $0_1 = $0_1 + $4_1 | 0;\n   $1_1 = $1_1 - $4_1 | 0;\n   $1($6_1, $0_1, $1_1 >>> 6 | 0);\n   $4_1 = $0_1 + ($1_1 & -64) | 0;\n   $0_1 = $1_1 & 63;\n   wasm2js_memory_copy($5_1, $4_1, $0_1);\n   HEAP32[$3_1 + 12 >> 2] = $0_1;\n   HEAP32[$3_1 + 8 >> 2] = HEAP32[$3_1 + 8 >> 2] + ($1_1 - -64 & -64);\n  }\n  $3($3_1 + 8 | 0, $2_1);\n  global$0 = $3_1 + 176 | 0;\n }\n \n function $3($0_1, $1_1) {\n  $0_1 = $0_1 | 0;\n  $1_1 = $1_1 | 0;\n  var $2_1 = 0, $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;\n  $6_1 = HEAP32[$0_1 >> 2];\n  $2_1 = HEAP32[$0_1 + 4 >> 2];\n  $5_1 = ($2_1 & 56) == 56 ? 2 : 1;\n  $3_1 = $5_1 << 6;\n  $4_1 = $0_1 + 8 | 0;\n  wasm2js_memory_fill($2_1 + $4_1 | 0, 0, $3_1 - $2_1 | 0);\n  HEAP8[$4_1 + HEAP32[$0_1 + 4 >> 2] | 0] = 128;\n  $3_1 = $3_1 + $4_1 | 0;\n  $2_1 = $2_1 + $6_1 | 0;\n  HEAP8[$3_1 - 2 | 0] = $2_1 >>> 5;\n  HEAP8[$3_1 - 1 | 0] = $2_1 << 3;\n  HEAP8[$3_1 - 3 | 0] = $2_1 >>> 13;\n  HEAP8[$3_1 - 4 | 0] = $2_1 >>> 21;\n  $1($0_1, $4_1, $5_1);\n  HEAP8[$1_1 + 3 | 0] = HEAP32[$0_1 + 136 >> 2];\n  HEAP8[$1_1 + 2 | 0] = HEAP32[$0_1 + 136 >> 2] >>> 8;\n  HEAP8[$1_1 + 1 | 0] = HEAPU16[$0_1 + 138 >> 1];\n  HEAP8[$1_1 | 0] = HEAPU8[$0_1 + 139 | 0];\n  $2_1 = $0_1 + 140 | 0;\n  HEAP8[$1_1 + 7 | 0] = HEAP32[$2_1 >> 2];\n  HEAP8[$1_1 + 6 | 0] = HEAP32[$2_1 >> 2] >>> 8;\n  HEAP8[$1_1 + 5 | 0] = HEAPU16[$0_1 + 142 >> 1];\n  HEAP8[$1_1 + 4 | 0] = HEAPU8[$0_1 + 143 | 0];\n  $2_1 = $0_1 + 144 | 0;\n  HEAP8[$1_1 + 11 | 0] = HEAP32[$2_1 >> 2];\n  HEAP8[$1_1 + 10 | 0] = HEAP32[$2_1 >> 2] >>> 8;\n  HEAP8[$1_1 + 9 | 0] = HEAPU16[$0_1 + 146 >> 1];\n  HEAP8[$1_1 + 8 | 0] = HEAPU8[$0_1 + 147 | 0];\n  $2_1 = $0_1 + 148 | 0;\n  HEAP8[$1_1 + 15 | 0] = HEAP32[$2_1 >> 2];\n  HEAP8[$1_1 + 14 | 0] = HEAP32[$2_1 >> 2] >>> 8;\n  HEAP8[$1_1 + 13 | 0] = HEAPU16[$0_1 + 150 >> 1];\n  HEAP8[$1_1 + 12 | 0] = HEAPU8[$0_1 + 151 | 0];\n  $2_1 = $0_1 + 152 | 0;\n  HEAP8[$1_1 + 19 | 0] = HEAP32[$2_1 >> 2];\n  HEAP8[$1_1 + 18 | 0] = HEAP32[$2_1 >> 2] >>> 8;\n  HEAP8[$1_1 + 17 | 0] = HEAPU16[$0_1 + 154 >> 1];\n  HEAP8[$1_1 + 16 | 0] = HEAPU8[$0_1 + 155 | 0];\n  $2_1 = $0_1 + 156 | 0;\n  HEAP8[$1_1 + 23 | 0] = HEAP32[$2_1 >> 2];\n  HEAP8[$1_1 + 22 | 0] = HEAP32[$2_1 >> 2] >>> 8;\n  HEAP8[$1_1 + 21 | 0] = HEAPU16[$0_1 + 158 >> 1];\n  HEAP8[$1_1 + 20 | 0] = HEAPU8[$0_1 + 159 | 0];\n  $2_1 = $0_1 + 160 | 0;\n  HEAP8[$1_1 + 27 | 0] = HEAP32[$2_1 >> 2];\n  HEAP8[$1_1 + 26 | 0] = HEAP32[$2_1 >> 2] >>> 8;\n  HEAP8[$1_1 + 25 | 0] = HEAPU16[$0_1 + 162 >> 1];\n  HEAP8[$1_1 + 24 | 0] = HEAPU8[$0_1 + 163 | 0];\n  $2_1 = $0_1 + 164 | 0;\n  HEAP8[$1_1 + 31 | 0] = HEAP32[$2_1 >> 2];\n  HEAP8[$1_1 + 30 | 0] = HEAP32[$2_1 >> 2] >>> 8;\n  HEAP8[$1_1 + 29 | 0] = HEAPU16[$0_1 + 166 >> 1];\n  HEAP8[$1_1 + 28 | 0] = HEAPU8[$0_1 + 167 | 0];\n }\n \n function $4($0_1) {\n  $0_1 = $0_1 | 0;\n  var $1_1 = 0, $2_1 = 0, $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $7 = 0, $8 = 0;\n  $3_1 = HEAP32[262];\n  $4_1 = HEAP32[263];\n  $5_1 = HEAP32[260];\n  $6_1 = HEAP32[261];\n  $1_1 = HEAP32[258];\n  $7 = HEAP32[259];\n  $2_1 = HEAP32[256];\n  $8 = HEAP32[257];\n  HEAP32[$0_1 >> 2] = 0;\n  HEAP32[$0_1 + 4 >> 2] = 0;\n  HEAP32[$0_1 + 136 >> 2] = $2_1;\n  HEAP32[$0_1 + 140 >> 2] = $8;\n  $2_1 = $0_1 + 144 | 0;\n  HEAP32[$2_1 >> 2] = $1_1;\n  HEAP32[$2_1 + 4 >> 2] = $7;\n  $1_1 = $0_1 + 152 | 0;\n  HEAP32[$1_1 >> 2] = $5_1;\n  HEAP32[$1_1 + 4 >> 2] = $6_1;\n  $0_1 = $0_1 + 160 | 0;\n  HEAP32[$0_1 >> 2] = $3_1;\n  HEAP32[$0_1 + 4 >> 2] = $4_1;\n }\n \n function $5($0_1, $1_1, $2_1) {\n  $0_1 = $0_1 | 0;\n  $1_1 = $1_1 | 0;\n  $2_1 = $2_1 | 0;\n  var $3_1 = 0, $4_1 = 0, $5_1 = 0;\n  $3_1 = HEAP32[$0_1 + 4 >> 2];\n  $4_1 = 64 - $3_1 | 0;\n  $4_1 = $2_1 >>> 0 < $4_1 >>> 0 ? $2_1 : $4_1;\n  wasm2js_memory_copy(($0_1 + $3_1 | 0) + 8 | 0, $1_1, $4_1);\n  $3_1 = HEAP32[$0_1 + 4 >> 2] + $2_1 | 0;\n  if ($3_1 >>> 0 <= 63) {\n   HEAP32[$0_1 + 4 >> 2] = $3_1;\n   return;\n  }\n  $3_1 = $0_1 + 8 | 0;\n  $1($0_1, $3_1, 1);\n  $5_1 = $1_1 + $4_1 | 0;\n  $1_1 = $2_1 - $4_1 | 0;\n  $1($0_1, $5_1, $1_1 >>> 6 | 0);\n  $2_1 = $1_1 & 63;\n  wasm2js_memory_copy($3_1, $5_1 + ($1_1 & -64) | 0, $2_1);\n  HEAP32[$0_1 + 4 >> 2] = $2_1;\n  HEAP32[$0_1 >> 2] = HEAP32[$0_1 >> 2] + ($1_1 - -64 & -64);\n }\n \n function $6($0_1, $1_1, $2_1, $3_1, $4_1) {\n  $0_1 = $0_1 | 0;\n  $1_1 = $1_1 | 0;\n  $2_1 = $2_1 | 0;\n  $3_1 = $3_1 | 0;\n  $4_1 = $4_1 | 0;\n  var $5_1 = 0, $6_1 = 0, $7 = 0, $8 = 0, $9 = 0;\n  $5_1 = global$0 - 432 | 0;\n  global$0 = $5_1;\n  $7 = $5_1 - ($0_1 + 79 & -16) | 0;\n  global$0 = $7;\n  label$1 : {\n   if ($2_1 >>> 0 <= 63) {\n    while (1) {\n     $8 = ($5_1 + 192 | 0) + $6_1 | 0;\n     HEAP8[$8 | 0] = ($2_1 | 0) > ($6_1 | 0) ? HEAPU8[$3_1 + $6_1 | 0] : 0;\n     $9 = $8 + 1 | 0;\n     $8 = $6_1 + 1 | 0;\n     HEAP8[$9 | 0] = ($8 | 0) < ($2_1 | 0) ? HEAPU8[($3_1 + $6_1 | 0) + 1 | 0] : 0;\n     $6_1 = $8 + 1 | 0;\n     if (($6_1 | 0) != 64) {\n      continue\n     }\n     break;\n    };\n    break label$1;\n   }\n   if (($2_1 | 0) == 64) {\n    break label$1\n   }\n   $2($3_1, $2_1, $5_1 + 192 | 0);\n   if ($2_1 & 192) {\n    break label$1\n   }\n   wasm2js_memory_fill(($5_1 + 192 | 0) + ($2_1 & 255) | 0, 0, (63 - $2_1 & 255) + 1 | 0);\n  }\n  $8 = $0_1 - -64 | 0;\n  $6_1 = 0;\n  while (1) {\n   $2_1 = ($5_1 + 128 | 0) + $6_1 | 0;\n   $3_1 = ($5_1 + 192 | 0) + $6_1 | 0;\n   HEAP8[$2_1 | 0] = HEAPU8[$3_1 | 0] ^ 54;\n   HEAP8[$2_1 + 1 | 0] = HEAPU8[$3_1 + 1 | 0] ^ 54;\n   HEAP8[$2_1 + 2 | 0] = HEAPU8[$3_1 + 2 | 0] ^ 54;\n   HEAP8[$2_1 + 3 | 0] = HEAPU8[$3_1 + 3 | 0] ^ 54;\n   $6_1 = $6_1 + 4 | 0;\n   if (($6_1 | 0) != 64) {\n    continue\n   }\n   break;\n  };\n  $2_1 = HEAP32[$5_1 + 132 >> 2];\n  HEAP32[$7 >> 2] = HEAP32[$5_1 + 128 >> 2];\n  HEAP32[$7 + 4 >> 2] = $2_1;\n  $3_1 = HEAP32[$5_1 + 140 >> 2];\n  $2_1 = $7 + 8 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$5_1 + 136 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $3_1;\n  $3_1 = $5_1 + 184 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  $2_1 = $7 + 56 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  $3_1 = $5_1 + 176 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  $2_1 = $7 + 48 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  $3_1 = $5_1 + 168 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  $2_1 = $7 + 40 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  $3_1 = $5_1 + 160 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  $2_1 = $7 + 32 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  $3_1 = $5_1 + 152 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  $2_1 = $7 + 24 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  $3_1 = $5_1 + 144 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  $2_1 = $7 + 16 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  if ($8 >>> 0 >= 65) {\n   wasm2js_memory_copy($7 - -64 | 0, $1_1, $0_1)\n  }\n  $2($7, $8, $5_1 - -64 | 0);\n  $6_1 = 0;\n  while (1) {\n   $0_1 = $5_1 + $6_1 | 0;\n   $1_1 = ($5_1 + 192 | 0) + $6_1 | 0;\n   HEAP8[$0_1 | 0] = HEAPU8[$1_1 | 0] ^ 92;\n   HEAP8[$0_1 + 1 | 0] = HEAPU8[$1_1 + 1 | 0] ^ 92;\n   HEAP8[$0_1 + 2 | 0] = HEAPU8[$1_1 + 2 | 0] ^ 92;\n   HEAP8[$0_1 + 3 | 0] = HEAPU8[$1_1 + 3 | 0] ^ 92;\n   $6_1 = $6_1 + 4 | 0;\n   if (($6_1 | 0) != 64) {\n    continue\n   }\n   break;\n  };\n  $1_1 = HEAP32[259];\n  $0_1 = $5_1 + 408 | 0;\n  HEAP32[$0_1 >> 2] = HEAP32[258];\n  HEAP32[$0_1 + 4 >> 2] = $1_1;\n  $1_1 = HEAP32[261];\n  $0_1 = $5_1 + 416 | 0;\n  HEAP32[$0_1 >> 2] = HEAP32[260];\n  HEAP32[$0_1 + 4 >> 2] = $1_1;\n  $1_1 = HEAP32[263];\n  $0_1 = $5_1 + 424 | 0;\n  HEAP32[$0_1 >> 2] = HEAP32[262];\n  HEAP32[$0_1 + 4 >> 2] = $1_1;\n  $1_1 = HEAP32[$5_1 + 12 >> 2];\n  $0_1 = $5_1 + 280 | 0;\n  HEAP32[$0_1 >> 2] = HEAP32[$5_1 + 8 >> 2];\n  HEAP32[$0_1 + 4 >> 2] = $1_1;\n  $2_1 = $5_1 + 16 | 0;\n  $3_1 = HEAP32[$2_1 + 4 >> 2];\n  $1_1 = $5_1 + 288 | 0;\n  HEAP32[$1_1 >> 2] = HEAP32[$2_1 >> 2];\n  HEAP32[$1_1 + 4 >> 2] = $3_1;\n  $3_1 = $5_1 + 24 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  $2_1 = $5_1 + 296 | 0;\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  $6_1 = $5_1 + 32 | 0;\n  $7 = HEAP32[$6_1 + 4 >> 2];\n  $3_1 = $5_1 + 304 | 0;\n  HEAP32[$3_1 >> 2] = HEAP32[$6_1 >> 2];\n  HEAP32[$3_1 + 4 >> 2] = $7;\n  $6_1 = $5_1 + 40 | 0;\n  $7 = HEAP32[$6_1 + 4 >> 2];\n  $3_1 = $5_1 + 312 | 0;\n  HEAP32[$3_1 >> 2] = HEAP32[$6_1 >> 2];\n  HEAP32[$3_1 + 4 >> 2] = $7;\n  $6_1 = $5_1 + 48 | 0;\n  $7 = HEAP32[$6_1 + 4 >> 2];\n  $3_1 = $5_1 + 320 | 0;\n  HEAP32[$3_1 >> 2] = HEAP32[$6_1 >> 2];\n  HEAP32[$3_1 + 4 >> 2] = $7;\n  $6_1 = $5_1 + 56 | 0;\n  $7 = HEAP32[$6_1 + 4 >> 2];\n  $3_1 = $5_1 + 328 | 0;\n  HEAP32[$3_1 >> 2] = HEAP32[$6_1 >> 2];\n  HEAP32[$3_1 + 4 >> 2] = $7;\n  HEAP32[$5_1 + 264 >> 2] = 0;\n  HEAP32[$5_1 + 268 >> 2] = 0;\n  $3_1 = HEAP32[$5_1 + 4 >> 2];\n  HEAP32[$5_1 + 272 >> 2] = HEAP32[$5_1 >> 2];\n  HEAP32[$5_1 + 276 >> 2] = $3_1;\n  $3_1 = HEAP32[257];\n  HEAP32[$5_1 + 400 >> 2] = HEAP32[256];\n  HEAP32[$5_1 + 404 >> 2] = $3_1;\n  $7 = $5_1 + 264 | 0;\n  $1($7, $5_1 + 272 | 0, 1);\n  $3_1 = $5_1 + 88 | 0;\n  $6_1 = HEAP32[$3_1 + 4 >> 2];\n  HEAP32[$2_1 >> 2] = HEAP32[$3_1 >> 2];\n  HEAP32[$2_1 + 4 >> 2] = $6_1;\n  $2_1 = $5_1 + 80 | 0;\n  $3_1 = HEAP32[$2_1 + 4 >> 2];\n  HEAP32[$1_1 >> 2] = HEAP32[$2_1 >> 2];\n  HEAP32[$1_1 + 4 >> 2] = $3_1;\n  $1_1 = HEAP32[$5_1 + 76 >> 2];\n  HEAP32[$0_1 >> 2] = HEAP32[$5_1 + 72 >> 2];\n  HEAP32[$0_1 + 4 >> 2] = $1_1;\n  HEAP32[$5_1 + 268 >> 2] = 32;\n  $0_1 = HEAP32[$5_1 + 68 >> 2];\n  HEAP32[$5_1 + 272 >> 2] = HEAP32[$5_1 + 64 >> 2];\n  HEAP32[$5_1 + 276 >> 2] = $0_1;\n  HEAP32[$5_1 + 264 >> 2] = HEAP32[$5_1 + 264 >> 2] - -64;\n  $3($7, $4_1);\n  global$0 = $5_1 + 432 | 0;\n }\n \n function __wasm_rotl_i32($0_1, $1_1) {\n  var $2_1 = 0, $3_1 = 0;\n  $2_1 = $1_1 & 31;\n  $3_1 = (-1 >>> $2_1 & $0_1) << $2_1;\n  $2_1 = $0_1;\n  $0_1 = 0 - $1_1 & 31;\n  return $3_1 | ($2_1 & -1 << $0_1) >>> $0_1;\n }\n \n bufferView = HEAPU8;\n initActiveSegments(env);\n function __wasm_memory_size() {\n  return buffer.byteLength / 65536 | 0;\n }\n \n function __wasm_memory_grow(pagesToAdd) {\n  pagesToAdd = pagesToAdd | 0;\n  var oldPages = __wasm_memory_size() | 0;\n  var newPages = oldPages + pagesToAdd | 0;\n  if ((oldPages < newPages) && (newPages < 65536)) {\n   var newBuffer = new ArrayBuffer(Math_imul(newPages, 65536));\n   var newHEAP8 = new Int8Array(newBuffer);\n   newHEAP8.set(HEAP8);\n   HEAP8 = new Int8Array(newBuffer);\n   HEAP16 = new Int16Array(newBuffer);\n   HEAP32 = new Int32Array(newBuffer);\n   HEAPU8 = new Uint8Array(newBuffer);\n   HEAPU16 = new Uint16Array(newBuffer);\n   HEAPU32 = new Uint32Array(newBuffer);\n   HEAPF32 = new Float32Array(newBuffer);\n   HEAPF64 = new Float64Array(newBuffer);\n   buffer = newBuffer;\n   bufferView = HEAPU8;\n  }\n  return oldPages;\n }\n \n return {\n  \"memory\": Object.create(Object.prototype, {\n   \"grow\": {\n    \"value\": __wasm_memory_grow\n   }, \n   \"buffer\": {\n    \"get\": function () {\n     return buffer;\n    }\n    \n   }\n  }), \n  \"__wasm_call_ctors\": $0, \n  \"sha256_transf\": $1, \n  \"sha256_k\": global$1, \n  \"sha256\": $2, \n  \"sha256_h0\": global$2, \n  \"sha256_final\": $3, \n  \"sha256_init\": $4, \n  \"sha256_update\": $5, \n  \"HMAC_SHA256\": $6, \n  \"__dso_handle\": global$3, \n  \"__data_end\": global$4, \n  \"__global_base\": global$5, \n  \"__heap_base\": global$6, \n  \"__memory_base\": global$7, \n  \"__table_base\": global$8\n };\n}\n\nvar retasmFunc = asmFunc(  { abort: function() { throw new Error('abort'); }\n  });\nexport var memory = retasmFunc.memory;\nexport var __wasm_call_ctors = retasmFunc.__wasm_call_ctors;\nexport var sha256_transf = retasmFunc.sha256_transf;\nexport var sha256 = retasmFunc.sha256;\nexport var sha256_final = retasmFunc.sha256_final;\nexport var sha256_init = retasmFunc.sha256_init;\nexport var sha256_update = retasmFunc.sha256_update;\nexport var HMAC_SHA256 = retasmFunc.HMAC_SHA256;\n","const size64kb = 64*1024;\nconst utf8enc = new TextEncoder('utf-8');\n\nfunction stringAsBuf(s) {\n  return utf8enc.encode(s)\n}\n\nfunction sendStringToBuffer(s, buf, offset=0) {\n  b=stringAsBuf(s)\n  buf.set(b, offset)\n  return b.length\n}\n\nexport function hmac_sha256(key, msg) {\n  const memory = crypto_hmac_sha256.memory;\n  const msg_buf = stringAsBuf(msg);\n  const key_buf = stringAsBuf(key);\n  const msglen = msg_buf.length;\n  const keylen = key_buf.length;\n  const hb = 0;\n  const newSize = hb+msglen+keylen+32;\n  if (memory.buffer.byteLength<newSize) {\n    memory.grow(Math.ceil(newSize/size64kb)+1);\n    // console.log(\"new size: \", memory.buffer.byteLength);\n  }\n  // console.log(hb, newSize, hb+32, hb+msglen, hb+msglen+keylen);\n  const buf = new Uint8Array(memory.buffer, hb, msglen+keylen+32);\n  buf.set(msg_buf, 32);\n  buf.set(key_buf, 32+msglen);\n  // console.log(\"buf before\", memory.buffer.slice(32,32+msglen));\n  crypto_hmac_sha256.HMAC_SHA256(msglen, hb+32, keylen, hb+32+msglen, hb)\n  return buf.slice(0, 32);\n}\n\n"],"names":["crypto_hmac_sha256","exports","bufferView","base64ReverseLookup","Uint8Array","i","initActiveSegments","imports","uint8Array","offset","b64","b1","b2","j","bLength","length","end","charCodeAt","base64DecodeToExistingUint8Array","wasm2js_memory_copy","dest","source","size","copyWithin","wasm2js_memory_fill","value","fill","retasmFunc","env","buffer","ArrayBuffer","HEAP8","Int8Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","Math_imul","Math","imul","abort","global$0","$1","$0_1","$1_1","$2_1","$7","$3_1","$4_1","$5_1","$6_1","$8","$9","$10","$11","$12","$13","$14","$15","$16","$17","$18","$19","$20","$21","$22","$23","$24","$25","$26","wasm2js_i32$0","wasm2js_i32$1","__wasm_rotl_i32","$2","$3","memory","Object","create","prototype","grow","pagesToAdd","oldPages","byteLength","newPages","newBuffer","set","get","__wasm_call_ctors","sha256_transf","sha256_k","sha256","sha256_h0","sha256_final","sha256_init","sha256_update","HMAC_SHA256","__dso_handle","__data_end","__global_base","__heap_base","__memory_base","__table_base","asmFunc","Error","utf8enc","TextEncoder","stringAsBuf","s","encode","hmac_sha256","key","msg","msg_buf","key_buf","msglen","keylen","newSize","ceil","buf","hb","slice"],"mappings":"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"}